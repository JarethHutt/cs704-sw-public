
#include <stdint.h>
#include <stdlib.h>

#include "stm32l1xx.h"

#include "board.h"
#include "gpio.h"
#include "spi.h"


volatile uint32_t systick_count = 0;

void SysTick_Handler(void)
{
    systick_count ++;
}

int main(void)
{
    int res;

    // Enable systick timer
    //SysTick_Config(SystemCoreClock / 1000);

    // Enable GPIO clocks
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);

    GPIO_InitTypeDef gpio_init;
    gpio_init.GPIO_Pin =  LED1_PIN;
    gpio_init.GPIO_Mode = GPIO_Mode_OUT;
    gpio_init.GPIO_OType = GPIO_OType_PP;
    gpio_init.GPIO_Speed = GPIO_Speed_40MHz;
    gpio_init.GPIO_PuPd = GPIO_PuPd_UP;
    GPIO_Init(LED1_PORT, &gpio_init);

    LED1_PORT->ODR |= LED1_PIN;

    while (1);
}

